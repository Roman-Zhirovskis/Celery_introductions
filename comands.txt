Command Reference
################

#Install RabbitMQ (Ubuntu Linux 20.04LTS)
    sudo apt-get install rabbitmq-server

# Run Celery
    celery -A NAMEOFINSTANCE worker --loglevel=info

    celery -A proj worker --loglevel=info

    [Windows OS]
    celery -A core worker -l info --pool=solo

#Run First Task
    py manage.py shell
    from task1.tasks import add
    add.delay(2, 2)

    or

    add.apply_async((2, 2), countdown=5)

#Useful commands
    #Show message on completion of task
        logger.info("Sent review email")

#Run RabbitMQ
    $ sudo systemctl status rabbitmq-server


Working with Flower
===============================

Windows Work Around
#####
C:\django\yt-django-celery-series-intro-install-run-task\venv\lib\site-packages\tornado\platform\asyncio.py

import sys

if sys.platform == 'win32':
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

Start Flower
#####
celery flower -A proj --port=5555


###############################
django-celery-beat
===============================

celery -A proj beat -l INFO  # For deeper logs use DEBUG
celery -A proj worker -B -l INFO

You can also embed beat inside the worker by enabling the workers -B option


Database scheduler
celery -A proj beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
###############################

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